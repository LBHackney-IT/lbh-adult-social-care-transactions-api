// <auto-generated />
using System;
using LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210623155531_UniquePayRunItemAndInvoiceIdInDisputedInvoice")]
    partial class UniquePayRunItemAndInvoiceIdInDisputedInvoice
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.DatabaseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("example_table");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Bills.Bill", b =>
                {
                    b.Property<long>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("BillDueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("BillPaymentStatusId")
                        .HasColumnType("integer");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateBilled")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uuid");

                    b.Property<int>("PackageTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("ServiceFromDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("ServiceToDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<string>("SupplierRef")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalBilled")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("UpdaterId")
                        .HasColumnType("uuid");

                    b.HasKey("BillId");

                    b.HasIndex("BillPaymentStatusId");

                    b.HasIndex("PackageTypeId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Bills.BillFile", b =>
                {
                    b.Property<int>("BillFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("BillId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FileUrl")
                        .HasColumnType("text");

                    b.Property<string>("OriginalFileName")
                        .HasColumnType("text");

                    b.HasKey("BillFileId");

                    b.HasIndex("BillId");

                    b.ToTable("BillFiles");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Bills.BillItem", b =>
                {
                    b.Property<long>("BillItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BillItemStatusId")
                        .HasColumnType("integer");

                    b.Property<int>("BillPaymentStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("HackneySupplierBillId")
                        .HasColumnType("bigint");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("text");

                    b.Property<string>("ItemName")
                        .HasColumnType("text");

                    b.Property<int>("PackageTypeId")
                        .HasColumnType("integer");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<float>("TaxRatePercentage")
                        .HasColumnType("real");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("UpdaterId")
                        .HasColumnType("uuid");

                    b.HasKey("BillItemId");

                    b.HasIndex("HackneySupplierBillId");

                    b.ToTable("BillItems");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Bills.BillPayment", b =>
                {
                    b.Property<long>("BillPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("BillItemId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("RemainingBalance")
                        .HasColumnType("numeric");

                    b.HasKey("BillPaymentId");

                    b.ToTable("BillPayments");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Bills.BillStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("StatusName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BillStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Outstanding"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Paid"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Overdue"
                        });
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("text");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Brokerage"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "Finance"
                        });
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.DisputedInvoice", b =>
                {
                    b.Property<Guid>("DisputedInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ActionRequiredFromId")
                        .HasColumnType("integer");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("InvoiceItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PayRunItemId")
                        .HasColumnType("uuid");

                    b.Property<string>("ReasonForHolding")
                        .HasColumnType("text");

                    b.HasKey("DisputedInvoiceId");

                    b.HasIndex("ActionRequiredFromId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("InvoiceItemId");

                    b.HasIndex("PayRunItemId", "InvoiceId")
                        .IsUnique();

                    b.ToTable("DisputedInvoices");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.DisputedInvoiceChat", b =>
                {
                    b.Property<Guid>("DisputedInvoiceChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ActionRequiredFromId")
                        .HasColumnType("integer");

                    b.Property<Guid>("DisputedInvoiceId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("InvoiceId")
                        .HasColumnType("uuid");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<int?>("MessageFromId")
                        .HasColumnType("integer");

                    b.Property<bool>("MessageRead")
                        .HasColumnType("boolean");

                    b.HasKey("DisputedInvoiceChatId");

                    b.HasIndex("ActionRequiredFromId");

                    b.HasIndex("DisputedInvoiceId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("MessageFromId");

                    b.ToTable("DisputedInvoiceChats");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.Invoice", b =>
                {
                    b.Property<Guid>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateInvoiced")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("InvoiceStatusId")
                        .HasColumnType("integer");

                    b.Property<int>("PackageTypeId")
                        .HasColumnType("integer");

                    b.Property<Guid>("ServiceUserId")
                        .HasColumnType("uuid");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<float>("SupplierVATPercent")
                        .HasColumnType("real");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("UpdaterId")
                        .HasColumnType("uuid");

                    b.HasKey("InvoiceId");

                    b.HasIndex("InvoiceNumber")
                        .IsUnique();

                    b.HasIndex("InvoiceStatusId");

                    b.HasIndex("PackageTypeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.InvoiceItem", b =>
                {
                    b.Property<Guid>("InvoiceItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uuid");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("SupplierReturnItemId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("UpdaterId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("VatAmount")
                        .HasColumnType("numeric");

                    b.HasKey("InvoiceItemId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.InvoiceNumber", b =>
                {
                    b.Property<int>("InvoiceNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("CurrentInvoiceNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("PostFix")
                        .HasColumnType("text");

                    b.Property<string>("Prefix")
                        .HasColumnType("text");

                    b.HasKey("InvoiceNumberId");

                    b.ToTable("InvoiceNumbers");

                    b.HasData(
                        new
                        {
                            InvoiceNumberId = 1,
                            CurrentInvoiceNumber = 1L,
                            Prefix = "INV"
                        });
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.InvoicePayment", b =>
                {
                    b.Property<Guid>("InvoicePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("PayRunItemId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("RemainingBalance")
                        .HasColumnType("numeric");

                    b.HasKey("InvoicePaymentId");

                    b.HasIndex("PayRunItemId");

                    b.ToTable("InvoicePayments");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.InvoiceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("ApprovalStatus")
                        .HasColumnType("boolean");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InvoiceStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApprovalStatus = false,
                            DisplayName = "Draft",
                            StatusName = "New"
                        },
                        new
                        {
                            Id = 2,
                            ApprovalStatus = false,
                            DisplayName = "Approve",
                            StatusName = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            ApprovalStatus = false,
                            DisplayName = "In pay Run",
                            StatusName = "In Pay Run"
                        },
                        new
                        {
                            Id = 4,
                            ApprovalStatus = false,
                            DisplayName = "Hold",
                            StatusName = "Held"
                        },
                        new
                        {
                            Id = 5,
                            ApprovalStatus = false,
                            DisplayName = "Accept",
                            StatusName = "Accepted"
                        },
                        new
                        {
                            Id = 6,
                            ApprovalStatus = false,
                            DisplayName = "Release",
                            StatusName = "Released"
                        },
                        new
                        {
                            Id = 7,
                            ApprovalStatus = false,
                            DisplayName = "Paid",
                            StatusName = "Paid"
                        });
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Ledger", b =>
                {
                    b.Property<long>("LedgerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("BillPaymentId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateEntered")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("InvoicePaymentId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("MoneyIn")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MoneyOut")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("PayRunBillId")
                        .HasColumnType("uuid");

                    b.HasKey("LedgerId");

                    b.HasIndex("BillPaymentId");

                    b.HasIndex("PayRunBillId");

                    b.ToTable("Ledgers");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PackageType", b =>
                {
                    b.Property<int>("PackageTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PackageTypeName")
                        .HasColumnType("text");

                    b.HasKey("PackageTypeId");

                    b.ToTable("PackageType");

                    b.HasData(
                        new
                        {
                            PackageTypeId = 1,
                            DateCreated = new DateTimeOffset(new DateTime(2021, 5, 21, 9, 40, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateUpdated = new DateTimeOffset(new DateTime(2021, 5, 21, 9, 40, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PackageTypeName = "Home Care Package"
                        },
                        new
                        {
                            PackageTypeId = 2,
                            DateCreated = new DateTimeOffset(new DateTime(2021, 5, 21, 9, 40, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateUpdated = new DateTimeOffset(new DateTime(2021, 5, 21, 9, 40, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PackageTypeName = "Residential Care Package"
                        },
                        new
                        {
                            PackageTypeId = 3,
                            DateCreated = new DateTimeOffset(new DateTime(2021, 5, 21, 9, 40, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateUpdated = new DateTimeOffset(new DateTime(2021, 5, 21, 9, 40, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PackageTypeName = "Day Care Package"
                        },
                        new
                        {
                            PackageTypeId = 4,
                            DateCreated = new DateTimeOffset(new DateTime(2021, 5, 21, 9, 40, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateUpdated = new DateTimeOffset(new DateTime(2021, 5, 21, 9, 40, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PackageTypeName = "Nursing Care Package"
                        });
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRun", b =>
                {
                    b.Property<Guid>("PayRunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("PayRunNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("PayRunStatusId")
                        .HasColumnType("integer");

                    b.Property<int?>("PayRunSubTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("PayRunTypeId")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdaterId")
                        .HasColumnType("uuid");

                    b.HasKey("PayRunId");

                    b.HasIndex("PayRunStatusId");

                    b.HasIndex("PayRunSubTypeId");

                    b.HasIndex("PayRunTypeId");

                    b.ToTable("PayRuns");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunItem", b =>
                {
                    b.Property<Guid>("PayRunItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("InvoiceItemId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("PayRunId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("RemainingBalance")
                        .HasColumnType("numeric");

                    b.HasKey("PayRunItemId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("InvoiceItemId");

                    b.HasIndex("PayRunId", "InvoiceId", "InvoiceItemId")
                        .IsUnique();

                    b.ToTable("PayRunItems");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunStatus", b =>
                {
                    b.Property<int>("PayRunStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("StatusName")
                        .HasColumnType("text");

                    b.HasKey("PayRunStatusId");

                    b.ToTable("PayRunStatuses");

                    b.HasData(
                        new
                        {
                            PayRunStatusId = 1,
                            StatusName = "Draft"
                        },
                        new
                        {
                            PayRunStatusId = 2,
                            StatusName = "SubmittedForApproval"
                        },
                        new
                        {
                            PayRunStatusId = 3,
                            StatusName = "Approved"
                        });
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunSubType", b =>
                {
                    b.Property<int>("PayRunSubTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("PayRunTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("SubTypeName")
                        .HasColumnType("text");

                    b.HasKey("PayRunSubTypeId");

                    b.HasIndex("PayRunTypeId");

                    b.ToTable("PayRunSubTypes");

                    b.HasData(
                        new
                        {
                            PayRunSubTypeId = 1,
                            PayRunTypeId = 1,
                            SubTypeName = "Residential Release Holds"
                        },
                        new
                        {
                            PayRunSubTypeId = 2,
                            PayRunTypeId = 2,
                            SubTypeName = "Direct Payments Release Holds"
                        });
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunSupplierBill", b =>
                {
                    b.Property<Guid>("PayRunBillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.HasKey("PayRunBillId");

                    b.ToTable("PayRunSupplierBills");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunSupplierBillItem", b =>
                {
                    b.Property<Guid>("PayRunBillItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("InvoiceItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InvoicePaymentId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("PayRunItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PayRunSupplierBillId")
                        .HasColumnType("uuid");

                    b.HasKey("PayRunBillItemId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("InvoiceItemId");

                    b.HasIndex("InvoicePaymentId");

                    b.HasIndex("PayRunItemId");

                    b.HasIndex("PayRunSupplierBillId");

                    b.ToTable("PayRunSupplierBillItems");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunType", b =>
                {
                    b.Property<int>("PayRunTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("TypeName")
                        .HasColumnType("text");

                    b.HasKey("PayRunTypeId");

                    b.ToTable("PayRunTypes");

                    b.HasData(
                        new
                        {
                            PayRunTypeId = 1,
                            TypeName = "Residential Recurring"
                        },
                        new
                        {
                            PayRunTypeId = 2,
                            TypeName = "Direct Payments"
                        },
                        new
                        {
                            PayRunTypeId = 3,
                            TypeName = "Home Care"
                        });
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Suppliers.Supplier", b =>
                {
                    b.Property<long>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<int>("PackageTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("SupplierName")
                        .HasColumnType("text");

                    b.Property<Guid?>("UpdaterId")
                        .HasColumnType("uuid");

                    b.HasKey("SupplierId");

                    b.HasIndex("PackageTypeId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Suppliers.SupplierCreditNote", b =>
                {
                    b.Property<long>("CreditNoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("AmountOverPaid")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AmountRemaining")
                        .HasColumnType("numeric");

                    b.Property<long>("BillPaymentFromId")
                        .HasColumnType("bigint");

                    b.Property<long>("BillPaymentPaidTo")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DatePaidForward")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CreditNoteId");

                    b.HasIndex("BillPaymentFromId");

                    b.ToTable("SupplierCreditNotes");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Suppliers.SupplierTaxRate", b =>
                {
                    b.Property<int>("TaxRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<float>("VATPercentage")
                        .HasColumnType("real");

                    b.HasKey("TaxRateId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierTaxRates");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Bills.Bill", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Bills.BillStatus", "BillStatus")
                        .WithMany()
                        .HasForeignKey("BillPaymentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PackageType", "PackageType")
                        .WithMany()
                        .HasForeignKey("PackageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Bills.BillFile", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Bills.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Bills.BillItem", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Bills.Bill", "Bill")
                        .WithMany("BillItems")
                        .HasForeignKey("HackneySupplierBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.DisputedInvoice", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Department", "ActionRequiredFromDepartment")
                        .WithMany()
                        .HasForeignKey("ActionRequiredFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.InvoiceItem", "InvoiceItem")
                        .WithMany()
                        .HasForeignKey("InvoiceItemId");

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunItem", "PayRunItem")
                        .WithMany()
                        .HasForeignKey("PayRunItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.DisputedInvoiceChat", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Department", "ActionRequiredFromDepartment")
                        .WithMany()
                        .HasForeignKey("ActionRequiredFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.DisputedInvoice", "DisputedInvoice")
                        .WithMany("DisputedInvoiceChats")
                        .HasForeignKey("DisputedInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.Invoice", null)
                        .WithMany("DisputedInvoiceChat")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Department", "MessageFromDepartment")
                        .WithMany()
                        .HasForeignKey("MessageFromId");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.Invoice", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.InvoiceStatus", "InvoiceStatus")
                        .WithMany()
                        .HasForeignKey("InvoiceStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PackageType", "PackageType")
                        .WithMany()
                        .HasForeignKey("PackageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Suppliers.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.InvoiceItem", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.Invoice", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.InvoicePayment", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunItem", "PayRunItem")
                        .WithMany()
                        .HasForeignKey("PayRunItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Ledger", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Bills.BillPayment", "BillPayment")
                        .WithMany()
                        .HasForeignKey("BillPaymentId");

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunSupplierBill", "PayRunSupplierBill")
                        .WithMany()
                        .HasForeignKey("PayRunBillId");
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRun", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunStatus", "PayRunStatus")
                        .WithMany()
                        .HasForeignKey("PayRunStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunSubType", "PayRunSubType")
                        .WithMany()
                        .HasForeignKey("PayRunSubTypeId");

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunType", "PayRunType")
                        .WithMany()
                        .HasForeignKey("PayRunTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunItem", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.InvoiceItem", "InvoiceItem")
                        .WithMany("PayRunItems")
                        .HasForeignKey("InvoiceItemId");

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRun", "PayRun")
                        .WithMany("PayRunItems")
                        .HasForeignKey("PayRunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunSubType", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunType", "PayRunType")
                        .WithMany()
                        .HasForeignKey("PayRunTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunSupplierBillItem", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.InvoiceItem", "InvoiceItem")
                        .WithMany()
                        .HasForeignKey("InvoiceItemId");

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Invoices.InvoicePayment", "InvoicePayment")
                        .WithMany()
                        .HasForeignKey("InvoicePaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunItem", "PayRunItem")
                        .WithMany()
                        .HasForeignKey("PayRunItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PayRunModels.PayRunSupplierBill", "PayRunSupplierBill")
                        .WithMany("PayRunSupplierBillItems")
                        .HasForeignKey("PayRunSupplierBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Suppliers.Supplier", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.PackageType", "Package")
                        .WithMany()
                        .HasForeignKey("PackageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Suppliers.SupplierCreditNote", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Bills.BillPayment", "BillPayment")
                        .WithMany()
                        .HasForeignKey("BillPaymentFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Suppliers.SupplierTaxRate", b =>
                {
                    b.HasOne("LBH.AdultSocialCare.Transactions.Api.V1.Infrastructure.Entities.Suppliers.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
